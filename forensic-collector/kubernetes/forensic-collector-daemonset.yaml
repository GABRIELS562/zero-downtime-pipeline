apiVersion: v1
kind: Namespace
metadata:
  name: forensics
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: forensic-collector
  namespace: forensics
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: forensic-collector
rules:
- apiGroups: [""]
  resources: ["pods", "nodes", "services", "endpoints", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: forensic-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: forensic-collector
subjects:
- kind: ServiceAccount
  name: forensic-collector
  namespace: forensics
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: forensic-collector
  namespace: forensics
  labels:
    app: forensic-collector
spec:
  selector:
    matchLabels:
      app: forensic-collector
  template:
    metadata:
      labels:
        app: forensic-collector
    spec:
      serviceAccountName: forensic-collector
      hostNetwork: true
      hostPID: true
      containers:
      - name: collector
        image: forensic-collector:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: forensics-data
          mountPath: /var/forensics
        - name: docker-sock
          mountPath: /var/run/docker.sock
          readOnly: true
        - name: host-proc
          mountPath: /host/proc
          readOnly: true
        - name: host-sys
          mountPath: /host/sys
          readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_PTRACE
            - NET_ADMIN
      - name: api
        image: forensic-collector:latest
        imagePullPolicy: IfNotPresent
        command: ["python3", "/app/forensic_api.py"]
        ports:
        - containerPort: 8888
          name: web
        volumeMounts:
        - name: forensics-data
          mountPath: /var/forensics
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: forensics-data
        hostPath:
          path: /var/forensics
          type: DirectoryOrCreate
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      - name: host-proc
        hostPath:
          path: /proc
          type: Directory
      - name: host-sys
        hostPath:
          path: /sys
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: forensic-api
  namespace: forensics
spec:
  selector:
    app: forensic-collector
  ports:
  - port: 8888
    targetPort: 8888
    name: web
  type: ClusterIP
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: forensic-monitor
  namespace: forensics
spec:
  schedule: "*/5 * * * *"  # Every 5 minutes
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: forensic-collector
          containers:
          - name: monitor
            image: forensic-collector:latest
            command: ["python3", "/app/forensic_collector.py", "monitor"]
            volumeMounts:
            - name: forensics-data
              mountPath: /var/forensics
          volumes:
          - name: forensics-data
            hostPath:
              path: /var/forensics
              type: DirectoryOrCreate
          restartPolicy: OnFailure
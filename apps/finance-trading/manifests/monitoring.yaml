apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: finance-trading-monitor
  namespace: finance-prod
  labels:
    app: finance-trading
    tier: production
    monitoring: prometheus
spec:
  selector:
    matchLabels:
      app: finance-trading
  endpoints:
  - port: metrics
    interval: 5s
    path: /metrics
    honorLabels: true
    scrapeTimeout: 4s
    metricRelabelings:
    - sourceLabels: [__name__]
      regex: 'trading_.*'
      action: keep
    - sourceLabels: [__name__]
      regex: 'http_request_duration_seconds.*'
      action: keep
    - sourceLabels: [__name__]
      regex: 'http_requests_total.*'
      action: keep
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: finance-trading-alerts
  namespace: finance-prod
  labels:
    app: finance-trading
    tier: production
    prometheus: kube-prometheus
spec:
  groups:
  - name: finance-trading.rules
    interval: 5s
    rules:
    - alert: TradingLatencyHigh
      expr: histogram_quantile(0.99, rate(http_request_duration_seconds_bucket{job="finance-trading", endpoint="/api/trade"}[1m])) > 0.050
      for: 10s
      labels:
        severity: critical
        service: finance-trading
        business_impact: high
      annotations:
        summary: "Trading API latency is above 50ms"
        description: "P99 latency for trading endpoint is {{ $value }}s, which exceeds the 50ms SLA"
        runbook_url: "https://runbooks.example.com/trading-latency"
        
    - alert: TradingSuccessRateLow
      expr: (rate(http_requests_total{job="finance-trading", endpoint="/api/trade", code=~"2.."}[1m]) / rate(http_requests_total{job="finance-trading", endpoint="/api/trade"}[1m])) * 100 < 99.99
      for: 5s
      labels:
        severity: critical
        service: finance-trading
        business_impact: high
      annotations:
        summary: "Trading success rate below 99.99%"
        description: "Trading success rate is {{ $value }}%, which is below the 99.99% SLA"
        runbook_url: "https://runbooks.example.com/trading-success-rate"
        
    - alert: MarketDataFeedDown
      expr: market_data_feed_connected{job="finance-trading"} == 0
      for: 30s
      labels:
        severity: critical
        service: finance-trading
        business_impact: high
      annotations:
        summary: "Market data feed connection lost"
        description: "Market data feed {{ $labels.feed_name }} is disconnected"
        runbook_url: "https://runbooks.example.com/market-data-feed"
        
    - alert: TradingPodsDown
      expr: up{job="finance-trading"} == 0
      for: 30s
      labels:
        severity: critical
        service: finance-trading
        business_impact: high
      annotations:
        summary: "Trading pod is down"
        description: "Trading pod {{ $labels.pod }} is not responding"
        runbook_url: "https://runbooks.example.com/pod-down"
        
    - alert: TradingMemoryUsageHigh
      expr: (container_memory_usage_bytes{pod=~"finance-trading-.*"} / container_spec_memory_limit_bytes) * 100 > 80
      for: 2m
      labels:
        severity: warning
        service: finance-trading
        business_impact: medium
      annotations:
        summary: "Trading pod memory usage is high"
        description: "Pod {{ $labels.pod }} memory usage is {{ $value }}%"
        runbook_url: "https://runbooks.example.com/memory-usage"
        
    - alert: TradingCPUUsageHigh
      expr: (rate(container_cpu_usage_seconds_total{pod=~"finance-trading-.*"}[5m]) / container_spec_cpu_quota * container_spec_cpu_period) * 100 > 80
      for: 2m
      labels:
        severity: warning
        service: finance-trading
        business_impact: medium
      annotations:
        summary: "Trading pod CPU usage is high"
        description: "Pod {{ $labels.pod }} CPU usage is {{ $value }}%"
        runbook_url: "https://runbooks.example.com/cpu-usage"
        
    - alert: TradingDuringMarketHours
      expr: trading_deployment_active{job="finance-trading"} == 1 and on() (hour() >= 9 and hour() < 16 and on() (day_of_week() > 0 and day_of_week() < 6))
      for: 0s
      labels:
        severity: critical
        service: finance-trading
        business_impact: high
        compliance: violation
      annotations:
        summary: "Deployment attempted during market hours"
        description: "A deployment was attempted during NYSE/NASDAQ trading hours"
        runbook_url: "https://runbooks.example.com/market-hours-violation"
        
    - alert: CanaryDeploymentFailing
      expr: (rate(http_requests_total{job="finance-trading", deployment_type="canary", code=~"2.."}[1m]) / rate(http_requests_total{job="finance-trading", deployment_type="canary"}[1m])) * 100 < 99.99
      for: 30s
      labels:
        severity: critical
        service: finance-trading
        business_impact: high
        deployment_type: canary
      annotations:
        summary: "Canary deployment failing"
        description: "Canary deployment success rate is {{ $value }}%, triggering rollback"
        runbook_url: "https://runbooks.example.com/canary-rollback"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: trading-dashboard-config
  namespace: finance-prod
data:
  dashboard.json: |
    {
      "dashboard": {
        "title": "Finance Trading System",
        "tags": ["finance", "trading", "production"],
        "timezone": "America/New_York",
        "refresh": "5s",
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "panels": [
          {
            "title": "Trading Latency P99",
            "type": "stat",
            "targets": [
              {
                "expr": "histogram_quantile(0.99, rate(http_request_duration_seconds_bucket{job=\"finance-trading\", endpoint=\"/api/trade\"}[1m])) * 1000",
                "legendFormat": "P99 Latency (ms)"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": 0},
                    {"color": "yellow", "value": 40},
                    {"color": "red", "value": 50}
                  ]
                },
                "unit": "ms"
              }
            }
          },
          {
            "title": "Success Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "(rate(http_requests_total{job=\"finance-trading\", code=~\"2..\"}[1m]) / rate(http_requests_total{job=\"finance-trading\"}[1m])) * 100",
                "legendFormat": "Success Rate (%)"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": 0},
                    {"color": "yellow", "value": 99.9},
                    {"color": "green", "value": 99.99}
                  ]
                },
                "unit": "percent"
              }
            }
          },
          {
            "title": "Market Data Feed Status",
            "type": "table",
            "targets": [
              {
                "expr": "market_data_feed_connected{job=\"finance-trading\"}",
                "legendFormat": "{{feed_name}}"
              }
            ]
          },
          {
            "title": "Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_requests_total{job=\"finance-trading\"}[1m])",
                "legendFormat": "{{method}} {{endpoint}}"
              }
            ]
          }
        ]
      }
    }
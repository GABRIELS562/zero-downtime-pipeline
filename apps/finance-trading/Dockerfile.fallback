# Fallback Dockerfile for Finance Trading Application
# Simple nginx-based placeholder for quick deployment

FROM nginx:alpine

# Add metadata
LABEL maintainer="Trading Platform Team" \
      application="finance-trading" \
      version="1.0.0" \
      compliance="SOX"

# Create a simple trading platform HTML page
RUN mkdir -p /usr/share/nginx/html && \
    cat > /usr/share/nginx/html/index.html <<'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trading Platform - Finance</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            color: white;
            height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }
        .container {
            text-align: center;
            padding: 2rem;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
        }
        h1 {
            font-size: 3rem;
            margin-bottom: 1rem;
            animation: fadeIn 1s ease-in;
        }
        .subtitle {
            font-size: 1.5rem;
            margin-bottom: 2rem;
            opacity: 0.9;
        }
        .status {
            display: inline-block;
            padding: 0.5rem 1rem;
            background: #4CAF50;
            border-radius: 25px;
            margin: 0.5rem;
        }
        .info {
            margin-top: 2rem;
            padding: 1rem;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
        }
        .info p {
            margin: 0.5rem 0;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .trading-icon {
            font-size: 4rem;
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="trading-icon">ðŸ’¹</div>
        <h1>Trading Platform</h1>
        <p class="subtitle">Finance & Trading System</p>
        <div class="status">âœ… System Operational</div>
        <div class="info">
            <p>ðŸ“Š Real-time Market Data</p>
            <p>ðŸ’¼ Order Management System</p>
            <p>ðŸ”’ SOX Compliant</p>
            <p>ðŸš€ Zero-Downtime Deployment</p>
        </div>
    </div>
</body>
</html>
EOF

# Create health check endpoint
RUN cat > /usr/share/nginx/html/health <<'EOF'
{"status":"healthy","service":"finance-trading","timestamp":"$(date -u +%Y-%m-%dT%H:%M:%SZ)"}
EOF

# Configure nginx for the application
RUN cat > /etc/nginx/conf.d/default.conf <<'EOF'
server {
    listen 8000;
    server_name localhost;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location /health {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"healthy","service":"finance-trading"}';
    }

    location /health/live {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"live","service":"finance-trading"}';
    }

    location /health/ready {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"ready","service":"finance-trading"}';
    }
}
EOF

# Expose port 8000 to match the app configuration
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8000/health || exit 1

# Run nginx
CMD ["nginx", "-g", "daemon off;"]